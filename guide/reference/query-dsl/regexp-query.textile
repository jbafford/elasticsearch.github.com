---
layout: guide
title: Regexp Query
cat: guide
sidebar: reference_query_dsl
---

p. The @regexp@ query allows you to use regular expression term queries.

p. *Note*: The performance of a @regexp@ query heavily depends on the regular expression chosen. Matching everything like @.*@ is very slow as well as using lookaround regular expressions. If possible, you should try to use a long prefix before your regular expression starts. Wildcard matchers like @.*?+@ will mostly lower performance.

<pre class="prettyprint lang-js">
{
    "regexp":{
        "name.first": "s.*y"
    }
}
</pre>

p. Boosting is also supported

<pre class="prettyprint lang-js">
{
    "regexp":{
        "name.first":{
            "value":"s.*y",
            "boost":1.2
        }
    }
}
</pre>

p. You can also use special flags

<pre class="prettyprint lang-js">
{
    "regexp":{
        "name.first": "s.*y",
        "flags" : "INTERSECTION|COMPLEMENT|EMPTY"
    }
}
</pre>

Possible flags are @ALL@, @ANYSTRING@, @AUTOMATON@, @COMPLEMENT@, @EMPTY@, @INTERSECTION@, @INTERVAL@, or @NONE@. Please check the "Lucene documentation":http://lucene.apache.org/core/4_3_0/core/index.html?org/apache/lucene/util/automaton/RegExp.html for their meaning

p. For more information see the "Lucene RegexpQuery documentation":http://lucene.apache.org/core/4_3_0/core/index.html?org/apache/lucene/search/RegexpQuery.html.

